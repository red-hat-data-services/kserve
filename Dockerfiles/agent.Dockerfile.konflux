# Build the inference-agent binary
FROM registry.access.redhat.com/ubi9/go-toolset:1.24 AS builder

# These built-in args are defined in the global scope, and are not automatically accessible within build stages or RUN commands.
# To expose these arguments inside the build stage, we need to redefine it without a value.
ARG TARGETOS TARGETARCH
RUN echo "GOOS=${TARGETOS} GOARCH=${TARGETARCH}"

# Copy in the go src
WORKDIR /go/src/github.com/kserve/kserve
COPY go.mod  go.mod
COPY go.sum  go.sum

RUN go mod download

COPY cmd/    cmd/
COPY pkg/    pkg/

# Build
USER root
RUN CGO_ENABLED=1 GOOS=${TARGETOS} GOARCH=${TARGETARCH} GOFLAGS=-mod=mod GOEXPERIMENT=strictfipsruntime go build -tags strictfipsruntime -a -o agent ./cmd/agent

# Copy the inference-agent into a thin image
FROM registry.access.redhat.com/ubi9/ubi-minimal:latest

RUN microdnf install -y --disablerepo=* --enablerepo=ubi-9-baseos-rpms shadow-utils && \
    microdnf clean all && \
    useradd kserve -m -u 1000
RUN microdnf remove -y shadow-utils

COPY third_party_agent/ third_party/

WORKDIR /ko-app

COPY --from=builder /go/src/github.com/kserve/kserve/agent /ko-app/
USER 1000:1000

ENTRYPOINT ["/ko-app/agent"]

LABEL com.redhat.component="odh-kserve-agent" \
      name="odh-kserve-agent" \
      description="odh-kserve-agent" \
      summary="odh-kserve-agent" \
      io.k8s.display-name="odh-kserve-agent" \
      io.k8s.description="odh-kserve-agent"
