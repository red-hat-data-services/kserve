apiVersion: serving.kserve.io/v1alpha1
kind: LLMInferenceService
metadata:
  name: qwen2-7b-instruct-pd
  annotations:
    k8s.v1.cni.cncf.io/networks: roce-p2
spec:
  replicas: 1
  model:
    uri: hf://Qwen/Qwen2.5-7B-Instruct
    name: Qwen/Qwen2.5-7B-Instruct
  router:
    scheduler:
      template:
        containers:
        # ALWAYS DO PD IN THIS EXAMPLE (THRESHOLD 0)
        - name: main
          args:
          - -v=4 # Debug level
          - --poolName
          - "{{ ChildName .ObjectMeta.Name `-inference-pool` }}"
          - --poolNamespace
          - "{{ .ObjectMeta.Namespace }}"
          - --zap-encoder
          - json
          - --grpcPort
          - "9002"
          - --grpcHealthPort
          - "9003"
          - --secureServing
          - --modelServerMetricsScheme
          - https
          - --modelServerMetricsHttpsInsecureSkipVerify
          - --certPath
          - /etc/ssl/certs
          - --configText
          - |2

            apiVersion: inference.networking.x-k8s.io/v1alpha1
            kind: EndpointPickerConfig
            plugins:
            - type: pd-profile-handler
              parameters:
                threshold: 0
            - type: prefill-header-handler
            - type: prefill-filter
            - type: decode-filter
            - type: prefix-cache-scorer
            - type: load-aware-scorer
            - type: max-score-picker
            schedulingProfiles:
            - name: prefill
              plugins:
              - pluginRef: prefill-filter
              - pluginRef: prefix-cache-scorer
                weight: 2.0
              - pluginRef: load-aware-scorer
                weight: 1.0
              - pluginRef: max-score-picker
            - name: decode
              plugins:
              - pluginRef: decode-filter
              - pluginRef: prefix-cache-scorer
                weight: 2.0
              - pluginRef: load-aware-scorer
                weight: 1.0
              - pluginRef: max-score-picker
    route: { }
    gateway: { }
  template:
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
            - matchExpressions:
                - key: kubernetes.io/hostname
                  operator: In
                  values:
                    - pokprod-b93r38s1
    imagePullSecrets:
    - name: "quay-registry-wseaton"
    containers:
      - name: main
        image: quay.io/aipcc/rhaiis/cuda-ubi9:3.2.2-1757699034
        env:
          - name: KSERVE_INFER_ROCE
            value: "true"
          - name: VLLM_NIXL_SIDE_CHANNEL_HOST
            valueFrom:
              fieldRef:
                fieldPath: status.podIP
          - name: VLLM_ADDITIONAL_ARGS
            value: "--kv_transfer_config '{\"kv_connector\":\"NixlConnector\",\"kv_role\":\"kv_both\"}'"
          - name: UCX_PROTO_INFO
            value: "y"
        resources:
          limits:
            cpu: '4'
            memory: 32Gi
            nvidia.com/gpu: "1"
            rdma/roce_gdr: 1
          requests:
            cpu: '2'
            memory: 16Gi
            nvidia.com/gpu: "1"
            rdma/roce_gdr: 1
        livenessProbe:
          httpGet:
            path: /health
            port: 8000
            scheme: HTTPS
          initialDelaySeconds: 120
          periodSeconds: 30
          timeoutSeconds: 30
          failureThreshold: 5
  prefill:
    replicas: 1
    template:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
              - matchExpressions:
                  - key: kubernetes.io/hostname
                    operator: In
                    values:
                      - pokprod-b93r39s1
      imagePullSecrets:
        - name: "quay-registry-wseaton"
      containers:
        - name: main
          image: quay.io/aipcc/rhaiis/cuda-ubi9:3.2.2-1757699034
          env:
            - name: KSERVE_INFER_ROCE
              value: "true"
            - name: VLLM_NIXL_SIDE_CHANNEL_HOST
              valueFrom:
                fieldRef:
                  fieldPath: status.podIP
            - name: VLLM_ADDITIONAL_ARGS
              value: "--kv_transfer_config '{\"kv_connector\":\"NixlConnector\",\"kv_role\":\"kv_both\"}'"
            - name: UCX_PROTO_INFO
              value: "y"
          resources:
            limits:
              cpu: '4'
              memory: 32Gi
              nvidia.com/gpu: "1"
              rdma/roce_gdr: 1
            requests:
              cpu: '2'
              memory: 16Gi
              nvidia.com/gpu: "1"
              rdma/roce_gdr: 1
          livenessProbe:
            httpGet:
              path: /health
              port: 8000
              scheme: HTTPS
            initialDelaySeconds: 120
            periodSeconds: 30
            timeoutSeconds: 30
            failureThreshold: 5